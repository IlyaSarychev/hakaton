# Generated by Django 4.1.1 on 2022-10-11 15:22

import account.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone

from ..models import User, ContractorAccount, CustomerAccount


def test_data(apps, schema_editor):
    User.objects.create_superuser(email="admin@admin.ru", password="admin")
    ContractorAccount.objects.create(
        email="best_contractor@mail.ru",
        password="contractor1234",
        first_name="Константин",
        last_name="Константинопольский",
        TIN="1010101010",
        position="Васек",
        phone_number="79530001122"
    )
    CustomerAccount.objects.create(
        email="customer@mail.ru",
        password="customer1234",
        first_name="Сергей",
        last_name="Сергеев",
        department="ИТ отдел",
        position="Младщий специалист",
        phone_number="79530001122"
    )


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail адрес')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество')),
                ('is_contractor', models.BooleanField(default=False, verbose_name='Подрядчик')),
                ('is_customer', models.BooleanField(default=False, verbose_name='Заказчик')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', account.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomerAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=11, validators=[django.core.validators.MinLengthValidator(limit_value=11)], verbose_name='Телефон')),
                ('position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Должность')),
                ('department', models.CharField(blank=True, max_length=255, null=True, verbose_name='Подразделение')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_account', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContractorAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TIN', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(limit_value=10)], verbose_name='ИНН')),
                ('short_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Короткое название')),
                ('position', models.CharField(max_length=255, verbose_name='Должность')),
                ('phone_number', models.CharField(max_length=11, validators=[django.core.validators.MinLengthValidator(limit_value=11)], verbose_name='Телефон')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contractor_account', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RunPython(test_data),
    ]
